name: build-docker

on: 
  push:
    branches:
      - main

jobs:
  build-docker-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Get latest tag
        id: get_version
        run: |
          git fetch --tags  # Assure-toi d'avoir les tags les plus rÃ©cents
          latest_tag=$(git tag --sort=-v:refname | tail -n 1)
          if [[ -z "$latest_tag" ]]; then
            new_version="1.0.0"
          else
            major=$(echo $latest_tag | cut -d. -f1)
            minor=$(echo $latest_tag | cut -d. -f2)
            patch=$(echo $latest_tag | cut -d. -f3)
            new_version="$major.$minor.$((patch+1))"
          fi
          echo "new_version=$new_version" >> $GITHUB_ENV
          echo "New Version: $new_version"


      - name: Create new tag
        run: |
          git tag ${{ env.new_version }}
          git push origin ${{ env.new_version }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            alexis341/my-app-getting:latest
            alexis341/my-app-getting:${{ env.new_version }}
            alexis341/my-app-getting:${{ github.sha }}
